
#Level 1

- fhir_resource_type ->  erbt von character (keine slots)
- fhir_xpath_expression -> erbt von character (keine slots)
- fhir_style -> slots: sep (character), brackets (character), rm_empty_cols (logical)
- fhir_url (virtual) -> slots: base (character)
- fhir_parameters -> slots: key (character), value(character)
- fhir_bundle (virtual)
- fhir_body -> slots: content (character), type (character)

- fhir_bundle_xml -> abgeleitet von fhir_bundle und xml_document, slots: self_url (fhir_url), next_url (fhir_url)
- fhir_bundle_serialized -> abgeleitet von fhir_bundle und raw

#Level 2
- fhir_url -> abgeleitet von character
- columns -> slots: colnames(character), expressions = list(fhir_xpath_expression)
- bundle_list

#Level 3
- df_description


#Level 4
- design

#Level 5
- fhir_table_list -> fhir_df_list, fhir_dt_list

##Sp채ter
- capability_statement




################################
cracked_df/cracked_dt sind unpraktisch, weil zu viel unerwartetes Verhalten der
df/DT auftaucht, wenn man die als S4 Klassen hat. (z.B. https://stackoverflow.com/questions/32206351/how-to-use-data-table-as-super-class-in-s4)

Alternative:

Superklasse fhir_table_list: abgeleitet von list + zus채tzlicher slot design

Davon abgeleitet:
- fhir_df_list: enth채lt dfs
- fhir_dt_list: enth채lt dts

################################






