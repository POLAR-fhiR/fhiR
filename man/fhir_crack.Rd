% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flatten_resources.R
\name{fhir_crack}
\alias{fhir_crack}
\title{Flatten list of FHIR bundles}
\usage{
fhir_crack(
  bundles,
  design,
  sep = NULL,
  remove_empty_columns = NULL,
  brackets = NULL,
  verbose = 2,
  data.table = FALSE
)
}
\arguments{
\item{bundles}{A FHIR search result as returned by \code{\link[=fhir_search]{fhir_search()}}.}

\item{design}{A \linkS4class{fhir_design} object. See \code{?fhir_design} and the corresponding vignette
(\code{vignette("flattenResources", package ="fhircrackr")}) for a more detailed explanation and
comprehensive examples of a \linkS4class{fhir_design}.}

\item{sep}{Optional. A string to separate pasted multiple entries which will overwrite the \code{sep} defined in the
\code{design}. If \code{sep=NULL}, it is looked up in the \code{design}, where the default is \code{" "}.}

\item{remove_empty_columns}{Optional. Remove empty columns? Logical scalar which will overwrite the \code{rm_empty_cols} defined in the
\code{design}. If \code{remove_empty_columns=NULL}, it is looked up in the \code{design}, where the default is \code{TRUE}.}

\item{brackets}{Optional. A character vector of length two defining the brackets surrounding indices for multiple entries, e.g. \code{c( "<", ">")},
which will overwrite the \code{brackets} defined in the \code{design}. If \code{brackets=NULL}, it is looked up in the \code{design}, where the default is \code{character(0)},
i.e. no indices are added to multiple entries.}

\item{verbose}{An Integer Scalar.  If 0, nothing is printed, if 1, only finishing message is printed, if > 1,
extraction progress will be printed. Defaults to 2.}

\item{data.table}{Logical scalar. Should tables be returned in data.table format instead of data.frame?
defaults to FALSE.}
}
\value{
A list of data.frames, i.e. a \linkS4class{fhir_df_list} object, or a list of data.tables, i.e. a \linkS4class{fhir_dt_list} object.
}
\description{
Converts a \linkS4class{fhir_bundle_list} (the result of \code{\link[=fhir_search]{fhir_search()}} to a list of data.frames/data.tables,
i.e. a \linkS4class{fhir_df_list}/\linkS4class{fhir_dt_list}
}
\examples{
#unserialize example bundle
bundles <- fhir_unserialize(medication_bundles)

#define attributes to extract
medications <- fhir_df_description(
   resource = "MedicationStatement",
   cols = c(
			    	MS.ID              = "id",
				    STATUS.TEXT        = "text/status",
			    	STATUS             = "status",
			    	MEDICATION.SYSTEM  = "medicationCodeableConcept/coding/system",
			    	MEDICATION.CODE    = "medicationCodeableConcept/coding/code",
			    	MEDICATION.DISPLAY = "medicationCodeableConcept/coding/display",
			    	DOSAGE             = "dosage/text",
			    	PATIENT            = "subject/reference",
			    	LAST.UPDATE        = "meta/lastUpdated"
	    	),
	 style = fhir_style(
 			sep = " ",
	        	brackets = c("[", "]"),
    		    rm_empty_cols= FALSE
    		)
)

patients <- fhir_df_description(
   resource = "Patient"
)

design <- fhir_design(medications, patients)

#convert bundles to data frames
tables <- fhir_crack(bundles, design)

#check results
head(tables$medications)
head(tables$patients)

#The design that was used can be extracted from the tables like this:
fhir_design(tables)

}
